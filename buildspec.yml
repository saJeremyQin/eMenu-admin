version: 0.2

env:
  variables:
    AWS_REGION: "ap-southeast-2"
    # ENV: dev


phases:
  pre_build:
    commands:
      - 'echo "ENV = ${ENV}"'
      # - 'ECR_REPOSITORY="emenu-admin-${ENV}"'
      - 'ECS_CLUSTER_NAME="emenu-admin-${ENV}-cluster"'
      - 'ECS_SERVICE_NAME="emenu-admin-${ENV}-service"'
      - 'echo "Getting ECR Registry from Parameter Store..."'
      # - 'ECR_REGISTRY="205930647566.dkr.ecr.ap-southeast-2.amazonaws.com/emenu"'
      - 'ECR_REGISTRY=$(aws ssm get-parameter --name "/emenu-admin/${ENV}/ecr_registry_url" --query "Parameter.Value" --output text)'
      - 'echo "The ECR_REGISTRY is $ECR_REGISTRY"'
      - 'echo "Logging in to Amazon ECR..."'
      - 'aws ecr get-login-password --region ap-southeast-2 | docker login --username AWS --password-stdin $ECR_REGISTRY'

  build:
    commands:
      - 'echo "Building image for dev environment"'
      - 'IMAGE_TAG=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-15)'
      - 'docker build -t ${ECR_REGISTRY}:${IMAGE_TAG} .'
      - 'docker tag ${ECR_REGISTRY}:${IMAGE_TAG} ${ECR_REGISTRY}:latest'
      # - 'echo "IMAGE_TAG=${IMAGE_TAG}" >> $CODEBUILD_ENV_FILE'
      # - 'export IMAGE_TAG=$IMAGE_TAG'

  post_build:
    commands:
      - 'echo "Pushing image to ECR..."'
      - 'docker push ${ECR_REGISTRY}:${IMAGE_TAG}'
      - 'docker push ${ECR_REGISTRY}:latest'
      - 'echo "The image tag is: ${IMAGE_TAG}"'

artifacts:
  files:
    # - 'imagedefinitions.json'
    # - 'appspec.yaml'
  discard-paths: yes